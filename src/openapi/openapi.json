{
  "openapi": "3.0.2",
  "info": {
    "title": "FastAPI",
    "version": "0.1.0"
  },
  "paths": {
    "/api/workers": {
      "get": {
        "tags": [
          "api"
        ],
        "summary": "Get Workers",
        "operationId": "get_workers_api_workers_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Limit",
              "type": "integer"
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Cursor",
              "type": "integer"
            },
            "name": "cursor",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Fuzzy Name",
              "type": "string"
            },
            "name": "fuzzy_name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkersWithCursor"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api"
        ],
        "summary": "Increase Worker",
        "operationId": "increase_worker_api_workers_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IncreaseWorkersReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Increase Worker Api Workers Post",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Worker"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/task": {
      "post": {
        "tags": [
          "api"
        ],
        "summary": "Create Task",
        "operationId": "create_task_api_task_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTaskReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/func": {
      "get": {
        "tags": [
          "api"
        ],
        "summary": "Get Func",
        "operationId": "get_func_api_func_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Limit",
              "type": "integer"
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Cursor",
              "type": "integer"
            },
            "name": "cursor",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Fuzzy Name",
              "type": "string"
            },
            "name": "fuzzy_name",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FuncWithCursor"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "api"
        ],
        "summary": "Add Func",
        "operationId": "add_func_api_func_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewFuncReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Func"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/func_schema": {
      "get": {
        "tags": [
          "api"
        ],
        "summary": "Get Func Schema",
        "operationId": "get_func_schema_api_func_schema_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Func Base64",
              "type": "string"
            },
            "name": "func_base64",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParameterSchema"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/tasks_on_worker": {
      "get": {
        "tags": [
          "api"
        ],
        "summary": "Get Tasks",
        "description": "get tasks on specific worker.\n:param worker_inactive2dead_second: time interval of current to last heart beat to determine if a worker dead, dead\nworker's running function will not show\n:param worker_uuid: worker uuid\n:param begin_time: query tasks start time after this time\n:param end_time: query tasks start time before this time, begin time and end time compose a time range\n:param limit: how many tasks will get in this query, the rest of it can be got by cursor\n:param cursor: the cursor returned by last query\n:param include_cross_task: if this option is true, any task cross the time range will as result\n:return: list of task describe",
        "operationId": "get_tasks_api_tasks_on_worker_get",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "Worker Uuid",
              "type": "string"
            },
            "name": "worker_uuid",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "title": "Begin Time",
              "type": "string",
              "format": "date-time"
            },
            "name": "begin_time",
            "in": "query"
          },
          {
            "required": true,
            "schema": {
              "title": "Worker Inactive2Dead Second",
              "type": "integer"
            },
            "name": "worker_inactive2dead_second",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "End Time",
              "type": "string",
              "format": "date-time"
            },
            "name": "end_time",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Limit",
              "type": "integer"
            },
            "name": "limit",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Cursor",
              "type": "integer"
            },
            "name": "cursor",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Include Cross Task",
              "type": "boolean",
              "default": true
            },
            "name": "include_cross_task",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDescribesWithCursor"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/cron_task": {
      "post": {
        "tags": [
          "api"
        ],
        "summary": "Create Cron Task",
        "operationId": "create_cron_task_api_cron_task_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewCronTaskReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Func": {
        "title": "Func",
        "required": [
          "uuid",
          "func",
          "dependencies",
          "parameter_schema",
          "description"
        ],
        "type": "object",
        "properties": {
          "uuid": {
            "title": "Uuid",
            "type": "string"
          },
          "func": {
            "title": "Func",
            "type": "string",
            "format": "binary"
          },
          "dependencies": {
            "title": "Dependencies",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "parameter_schema": {
            "title": "Parameter Schema",
            "anyOf": [
              {
                "$ref": "#/components/schemas/ParameterSchema"
              },
              {
                "type": "string"
              }
            ]
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "tags": {
            "title": "Tags",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "name": {
            "title": "Name",
            "type": "string"
          }
        }
      },
      "FuncWithCursor": {
        "title": "FuncWithCursor",
        "required": [
          "funcs",
          "cursor"
        ],
        "type": "object",
        "properties": {
          "funcs": {
            "title": "Funcs",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Func"
            }
          },
          "cursor": {
            "title": "Cursor",
            "type": "integer"
          }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "IncreaseWorkersReq": {
        "title": "IncreaseWorkersReq",
        "required": [
          "number",
          "tags"
        ],
        "type": "object",
        "properties": {
          "number": {
            "title": "Number",
            "type": "integer"
          },
          "tags": {
            "title": "Tags",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "name": {
            "title": "Name",
            "type": "string",
            "nullable": true
          }
        }
      },
      "NewCronTaskReq": {
        "title": "NewCronTaskReq",
        "required": [
          "function_uuid",
          "timepoints",
          "worker_uuid"
        ],
        "type": "object",
        "properties": {
          "function_uuid": {
            "title": "Function Uuid",
            "type": "string"
          },
          "timepoints": {
            "title": "Timepoints",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimePoint"
            }
          },
          "worker_uuid": {
            "title": "Worker Uuid",
            "type": "string"
          }
        }
      },
      "NewFuncReq": {
        "title": "NewFuncReq",
        "required": [
          "description",
          "dependencies"
        ],
        "type": "object",
        "properties": {
          "description": {
            "title": "Description",
            "type": "string"
          },
          "dependencies": {
            "title": "Dependencies",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "title": "Name",
            "type": "string",
            "nullable": true
          },
          "func_base64": {
            "title": "Func Base64",
            "type": "string",
            "nullable": true
          }
        }
      },
      "NewTaskReq": {
        "title": "NewTaskReq",
        "required": [
          "timeout",
          "dependencies",
          "change_state",
          "description",
          "func_uuid"
        ],
        "type": "object",
        "properties": {
          "timeout": {
            "title": "Timeout",
            "type": "integer"
          },
          "dependencies": {
            "title": "Dependencies",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "change_state": {
            "title": "Change State",
            "type": "boolean"
          },
          "description": {
            "title": "Description",
            "type": "string"
          },
          "func_uuid": {
            "title": "Func Uuid",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "nullable": true
          },
          "worker_uuids": {
            "title": "Worker Uuids",
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "worker_tags": {
            "title": "Worker Tags",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            },
            "nullable": true
          }
        }
      },
      "ParameterSchema": {
        "title": "ParameterSchema",
        "required": [
          "uuid",
          "json_schema"
        ],
        "type": "object",
        "properties": {
          "uuid": {
            "title": "Uuid",
            "type": "string"
          },
          "json_schema": {
            "title": "Json Schema",
            "type": "string"
          }
        }
      },
      "Tag": {
        "title": "Tag",
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "key": {
            "title": "Key",
            "type": "string"
          },
          "value": {
            "title": "Value",
            "type": "string",
            "nullable": true
          }
        }
      },
      "TaskDescribe": {
        "title": "TaskDescribe",
        "required": [
          "start_time",
          "create_time",
          "task_uuid",
          "status"
        ],
        "type": "object",
        "properties": {
          "start_time": {
            "title": "Start Time",
            "type": "string",
            "format": "date-time"
          },
          "create_time": {
            "title": "Create Time",
            "type": "string",
            "format": "date-time"
          },
          "task_uuid": {
            "title": "Task Uuid",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/TaskStatus"
          },
          "name": {
            "title": "Name",
            "type": "string",
            "nullable": true
          },
          "stop_time": {
            "title": "Stop Time",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "parent_task_uuid": {
            "title": "Parent Task Uuid",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "string"
              }
            ],
            "nullable": true
          },
          "parent_task_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaskType"
              }
            ],
            "nullable": true
          }
        }
      },
      "TaskDescribesWithCursor": {
        "title": "TaskDescribesWithCursor",
        "required": [
          "task_describes",
          "cursor"
        ],
        "type": "object",
        "properties": {
          "task_describes": {
            "title": "Task Describes",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskDescribe"
            }
          },
          "cursor": {
            "title": "Cursor",
            "type": "integer"
          }
        }
      },
      "TaskStatus": {
        "title": "TaskStatus",
        "enum": [
          "UNSCHEDULED",
          "SCHEDULED",
          "SKIP",
          "QUEUED",
          "RUNNING",
          "SUCCESS",
          "ERROR",
          "DIED"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "TaskType": {
        "title": "TaskType",
        "enum": [
          "TASK",
          "CRON_TASK"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "TimePoint": {
        "title": "TimePoint",
        "required": [
          "unit",
          "n"
        ],
        "type": "object",
        "properties": {
          "unit": {
            "$ref": "#/components/schemas/TimeUnit"
          },
          "n": {
            "title": "N",
            "type": "integer"
          },
          "at": {
            "title": "At",
            "type": "string"
          }
        }
      },
      "TimeUnit": {
        "title": "TimeUnit",
        "enum": [
          "SECOND",
          "MINUTE",
          "HOUR",
          "DAY",
          "WEEK",
          "MILLISECOND"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      },
      "Worker": {
        "title": "Worker",
        "required": [
          "uuid",
          "status"
        ],
        "type": "object",
        "properties": {
          "uuid": {
            "title": "Uuid",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/WorkerStatus"
          },
          "last_heart_beat": {
            "title": "Last Heart Beat",
            "type": "string",
            "format": "date-time"
          },
          "start_time": {
            "title": "Start Time",
            "type": "string",
            "format": "date-time"
          },
          "stop_time": {
            "title": "Stop Time",
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "tags": {
            "title": "Tags",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          }
        }
      },
      "WorkerStatus": {
        "title": "WorkerStatus",
        "enum": [
          "RUNNING",
          "STOPPING",
          "STOPPED"
        ],
        "type": "string",
        "description": "An enumeration."
      },
      "WorkersWithCursor": {
        "title": "WorkersWithCursor",
        "required": [
          "workers",
          "cursor"
        ],
        "type": "object",
        "properties": {
          "workers": {
            "title": "Workers",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Worker"
            }
          },
          "cursor": {
            "title": "Cursor",
            "type": "integer"
          }
        }
      }
    }
  }
}